{"version":3,"sources":["images/adalav.jpg","modules/getDataFromServer.js","components/Card.js","components/Header.js","components/Filter.js","components/List.js","modules/getDetailsFromServer.js","modules/darkerColor.js","components/ProfileItem.js","components/Buttons.js","components/Details.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","getPokemon","id","ENDPOINT","fetch","then","response","json","getPokemonTypes","types","map","type","name","sort","getPokemonColor","colors","grass","water","fire","poison","flying","bug","normal","electric","ground","fairy","fighting","psychic","rock","steel","ice","ghost","dragon","createPromisesList","promises","i","push","getPokemonsList","a","Promise","all","data","pokemon","species","sprites","image","front_default","Card","props","style","background","className","to","backgroundImage","Header","Filter","onChange","onInputChange","value","inputValue","placeholder","List","pokemons","index","key","getPokemonDetails","renderCardList","path","getData","find","item","language","formatData","info","Object","assign","abilities","height","capture_rate","color","egg_groups","gender_rate","growth_rate","habitat","base_happiness","flavor_text_entries","weight","shape","genera","console","log","evolution_chain","url","evolution","chain","evolves_to","specie","getEvolution","ability","egg","hapiness","image_back","back_default","translated_name","genus","text","flavor_text","getDetailsFromServer","darkenColor","percent","R","parseInt","substring","G","B","toString","length","ProfileItem","quest","Buttons","prev","next","Details","componentDidMount","getInicialState","pokemonName","details","setState","componentDidUpdate","state","this","getTitlesColor","backgroundColor","getList","list","keys","pokemonList","filter","pok","getPrevPokemon","getNextPokemon","src","alt","currPokemon","getEvolutionList","especie","e","onClick","handleEvolutionClick","getEvolutionItem","React","Component","footer","href","adalabLogo","width","App","handleInputChange","event","target","renderList","toLowerCase","filteredPokemons","includes","getPokemonName","renderDetails","renderProps","match","params","selectedPokemon","bind","exact","render","Footer","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f4db69f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adalav.befe2096.jpg\";","const getPokemon = (id) => {\n  const ENDPOINT = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n  return fetch(ENDPOINT)\n    .then(response => response.json());\n};\n\nconst getPokemonTypes = types => types.map(type => type.type.name).sort();\n\nconst getPokemonColor = types => {\n  const colors = {\n    grass: '#78c850',\n    water: '#6890f0',\n    fire: '#f08030',\n    poison: '#a040a0',\n    flying: '#A890F0',\n    bug: '#A8B821',\n    normal: '#A8A878',\n    electric: '#f8d12f',\n    ground: '#E0C068',\n    fairy: '#EE99AC',\n    fighting: '#C03028',\n    psychic: '#F75888',\n    rock: '#817333',\n    steel: '#B8B8D0',\n    ice: '#98D8D8',\n    ghost:'#705797',\n    dragon: '#3E1EC0'\n  }\n  return getPokemonTypes(types).map(type => colors[type])\n}\n\nconst createPromisesList = () => {\n  const promises = [];\n  for (let i = 1; i <= 151; i++){\n    promises.push(getPokemon(i));\n  }\n  return promises\n}\n\nconst getPokemonsList = async () => {\n  const data = await Promise.all(createPromisesList());\n  return data.map(pokemon => {\n    const { id, species, sprites, types } = pokemon;\n    return {\n      colors: getPokemonColor(types),\n      id: id,\n      image: sprites.front_default,\n      name: species.name,\n      types: getPokemonTypes(types),\n    };\n  });\n}\n\nexport { getPokemonsList, getPokemonColor };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/card.scss\";\n\nconst Card = props => {\n  const { name, image, colors } = props.pokemon;\n  const style = {\n    background: `linear-gradient(90deg, ${colors[0]} 50%, ${colors[1] || colors[0]} 50%)`\n  };\n  return (\n    <div className=\"pokemon\" style={style}>\n      <Link to={\"/\" + name}>\n        <div\n          className=\"pokemon__image\"\n          style={{ backgroundImage: `url(${image})` }}\n        ></div>\n        <p className=\"pokemon__name\">{name}</p>\n      </Link>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport '../stylesheets/header.scss'\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <h1 className='header__title'>Pokedex</h1>\n    </header>\n  )\n}\n\nexport default Header","import React from \"react\";\nimport '../stylesheets/filter.scss';\n\nconst Filter = props => {\n  return (\n    <div className=\"filter\">\n      <input\n        className=\"filter_input\"\n        onChange={props.onInputChange}\n        value={props.inputValue}\n        placeholder=\"Search for Pokemon name or type\"\n      />\n      {/* <i class=\"fas fa-search\"></i> */}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"../stylesheets/list.scss\";\nimport Header from \"./Header\";\nimport Filter from \"./Filter\";\n\nconst renderCardList = props => {\n  return props.pokemons.map((pokemon, index) => {\n    return (\n      <li className=\"list__item\" key={index}>\n        <Card pokemon={pokemon} getPokemonDetails={props.getPokemonDetails} />\n      </li>\n    );\n  });\n};\n\nconst List = props => {\n  return (\n    <div className=\"list-page\">\n      <Header />\n      <Filter inputValue={props.inputValue} onInputChange={props.onInputChange}/>\n      <ul className=\"list\">{renderCardList(props)}</ul>\n    </div>\n  );\n};\n\nexport default List;\n","import { getPokemonColor } from \"./getDataFromServer\";\n\nconst getPokemon = (path, pokemon) => {\n  const ENDPOINT = `https://pokeapi.co/api/v2/${path}/${pokemon}/`;\n  return fetch(ENDPOINT).then(response => response.json());\n};\n\nconst getPokemonsList = pokemon => {\n  const promises = [\n    getPokemon(\"pokemon\", pokemon),\n    getPokemon(\"pokemon-species\", pokemon)\n  ];\n  return Promise.all(promises);\n};\n\nconst getData = data => data.find(item => item.language.name === \"en\");\n\nconst getEvolution = info => {\n  return fetch(info.evolution_chain.url)\n    .then(response => response.json())\n    .then(evolution => {\n      const first = [evolution.chain.species.name];\n      const second = evolution.chain.evolves_to.map(\n        specie => specie.species.name\n      );\n      const getThird = () => \n      evolution.chain &&\n      evolution.chain.evolves_to[0] && evolution.chain.evolves_to[0].evolves_to[0] ? [evolution.chain.evolves_to[0].evolves_to[0].species.name] : null;\n      return [first, second, getThird()];\n    });\n};\n\nconst formatData = data => {\n  const info = Object.assign(data[0], data[1]);\n  const {\n    abilities,\n    name,\n    height,\n    id,\n    capture_rate,\n    color,\n    egg_groups,\n    gender_rate,\n    growth_rate,\n    habitat,\n    base_happiness,\n    flavor_text_entries,\n    weight,\n    shape,\n    sprites,\n    types,\n    genera\n  } = info;\n  console.log(info)\n  return getEvolution(info).then(evolution => {\n    return {\n      abilities: abilities.map(ability => ability.ability.name),\n      capture_rate: capture_rate,\n      color: color.name,\n      colors: getPokemonColor(types),\n      egg_groups: egg_groups.map(egg => egg.name),\n      evolution: evolution,\n      height: height / 10,\n      gender_rate: gender_rate,\n      habitat: habitat.name,\n      hapiness: base_happiness,\n      id: id,\n      image: sprites.front_default,\n      image_back: sprites.back_default,\n      name: name,\n      shape: shape.name,\n      growth_rate: growth_rate.name,\n      translated_name: getData(genera).genus,\n      text: getData(flavor_text_entries).flavor_text,\n      types: types.map(type => type.type.name).sort(),\n      weight: weight / 10\n    };\n  });\n};\n\nconst getDetailsFromServer = pokemon => {\n  return getPokemonsList(pokemon).then(data => formatData(data));\n};\n\n// {pokemon.evolves_to = evolution.chain.species.name})\nexport default getDetailsFromServer;\n","function darkenColor(color, percent) {\n  \n  var R = parseInt(color.substring(1,3),16);\n  var G = parseInt(color.substring(3,5),16);\n  var B = parseInt(color.substring(5,7),16);\n\n  R = parseInt(R * (100 + percent) / 100);\n  G = parseInt(G * (100 + percent) / 100);\n  B = parseInt(B * (100 + percent) / 100);\n\n  R = (R<255)?R:255;  \n  G = (G<255)?G:255;  \n  B = (B<255)?B:255;  \n\n  var RR = ((R.toString(16).length===1)?\"0\"+R.toString(16):R.toString(16));\n  var GG = ((G.toString(16).length===1)?\"0\"+G.toString(16):G.toString(16));\n  var BB = ((B.toString(16).length===1)?\"0\"+B.toString(16):B.toString(16));\n\n  return \"#\"+RR+GG+BB;\n}\n export default darkenColor","import React from \"react\";\n\nconst ProfileItem = props => {\n  return (\n    <div className=\"profile__text\">\n      <span className=\"profile__text__span\">{props.quest}</span>\n      {props.data}\n    </div>\n  );\n};\n\nexport default ProfileItem\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../stylesheets/buttons.scss'\n\nconst Buttons = props => {\n  return (\n    <div className=\"buttons\">\n      <Link to={props.prev}>\n       <button className=\"prev-btn --btn\">Previous</button>\n      </Link>\n      <Link to=\"/\">\n        <button className=\"home-btn --btn\">Home</button>\n      </Link>\n      <Link to={props.next}>\n        <button className=\"next-btn --btn\">Next</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/details.scss\";\nimport getDetailsFromServer from \"../modules/getDetailsFromServer\";\nimport darkenColor from \"../modules/darkerColor\";\nimport ProfileItem from \"./ProfileItem\";\nimport Buttons from \"./Buttons\";\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: {}\n    };\n  }\n\n  componentDidMount = () => {\n    this.getInicialState();\n  };\n\n  getInicialState = () => {\n    getDetailsFromServer(this.props.pokemonName).then(details =>\n      this.setState({ details })\n    );\n  };\n\n  componentDidUpdate = () => {\n    if (this.props.pokemonName !== this.state.details.name) {\n      getDetailsFromServer(this.props.pokemonName).then(details =>\n        this.setState({ details })\n      );\n    }\n  };\n\n  render() {\n\n    const {\n      abilities,\n      capture_rate,\n      color,\n      colors,\n      egg_groups,\n      evolution,\n      gender_rate,\n      growth_rate,\n      habitat,\n      height,\n      hapiness,\n      id,\n      image,\n      image_back,\n      name,\n      shape,\n      text,\n      translated_name,\n      types,\n      weight\n    } = this.state.details;\n\n    const getBGColor = () => {\n      return colors\n        ? {\n            background: `linear-gradient(90deg, ${colors[0]} 50%, ${colors[1] ||\n              colors[0]} 50%)`\n          }\n        : null;\n    };\n\n    const getTitlesColor = () => {\n      return colors ? { backgroundColor: darkenColor(colors[0], -60) } : null;\n    };\n\n    const getList = (list, colors) => {\n      const color = colors || \"\";\n      const renderList = () =>\n        list.map((item, index) => (\n          <li key={index} style={{ backgroundColor: color[index] }}>\n            {item}\n          </li>\n        ));\n      return list ? <ul>{renderList()}</ul> : \"\";\n    };\n\n    const getEvolution = () => {\n      const currPokemon = pokemon => {\n        return pokemon.name === name ? \"currentPokemon\" : '';\n      };\n\n      const getEvolutionItem = (e, index) => {\n        const pokemon = this.props.pokemonList.find(\n          pokemon => pokemon.name === e\n          );\n        return pokemon ? (\n          <li\n            key={index}\n            className={\"evolution__list__item \" + currPokemon(pokemon)}\n            onClick={this.handleEvolutionClick}\n          >\n            <Link to={pokemon.name}>\n              <img src={pokemon.image} alt={pokemon.name} />\n            </Link>\n          </li>\n        ) : null;\n      };\n\n      const getEvolutionList = (especie, index) => {\n        return especie ? (\n          <ul key={index} className=\"evolution__list\">\n            {especie.map((e, index) => getEvolutionItem(e, index))}\n          </ul>\n        ) : null;\n      };\n\n      return evolution.map((especie, index) =>\n        getEvolutionList(especie, index)\n      );\n    };\n\n    const getPrevPokemon = id => {\n      return id > 1\n        ? this.props.pokemonList.filter(pok => pok.id === id - 1)[0].name\n        : \"\";\n    };\n\n    const getNextPokemon = id => {\n      return id < 151\n        ? this.props.pokemonList.filter(pok => pok.id === id + 1)[0].name\n        : \"\";\n    };\n\n    return Object.keys(this.state.details).length ? (\n      <div className=\"details-page\" style={getBGColor()}>\n        <Buttons prev={getPrevPokemon(id)} next={getNextPokemon(id)} />\n        <div className=\"details\">\n          <h1 className=\"details__name\" style={getTitlesColor()}>\n            {name}\n          </h1>\n          <div className=\"details__container\">\n            <section className=\"description\">\n              <img className=\"description__image\" src={image} alt={name} />\n              <img className=\"description__image_back\" src={image_back} alt={name} />\n              <div className=\"description__types\">\n                {getList(types, colors)}\n              </div>\n              <h3 className=\"description__id\">{`# ${id}`}</h3>\n              <p className=\"description__translated_name\">{translated_name}</p>\n              <p className=\"description__text\">{text}</p>\n            </section>\n            <section className=\"profile\">\n              <h2 className=\"profile__title --title\" style={getTitlesColor()}>\n                Profile\n              </h2>\n              <div className='profile__wrap'>\n              <ProfileItem quest={\"Height: \"} data={`${height}m`} />\n              <ProfileItem quest={\"Weight: \"} data={`${weight}kg`} />\n              <ProfileItem quest={\"Catch Rate: \"} data={`${capture_rate}%`} />\n              <ProfileItem quest={\"Hapiness: \"} data={`${hapiness}%`} />\n              <ProfileItem quest={\"Habitat: \"} data={habitat} />\n              <ProfileItem quest={\"Growth Rate: \"} data={growth_rate} />\n              <ProfileItem quest={\"Color: \"} data={color} />\n              <ProfileItem quest={\"Shape: \"} data={shape} />\n              <ProfileItem quest={\"Abilities: \"} data={getList(abilities)} />\n              <ProfileItem quest={\"Egg Groups: \"} data={getList(egg_groups)} />\n              </div>\n            </section>\n            <section className=\"evolutions\">\n              <h2\n                className=\"evolutions__title --title\"\n                style={getTitlesColor()}\n              >\n                Evolution Chain\n              </h2>\n              <div className=\"evolution\">{getEvolution()}</div>\n            </section>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div className=\"loading\">\n        <div className=\"pokemon\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React from \"react\";\nimport \"../stylesheets/footer.scss\";\nimport adalabLogo from '../images/adalav.jpg'\n\nconst footer = () => {\n  return (\n    <footer className=\"footer\">\n      <p>Bárbara Chaves © 2019</p>\n      <div className=\"footer__links\">\n        <a href=\"https://www.linkedin.com/in/barbara-chaves/\">\n          <i className=\"fab fa-linkedin\"></i>\n        </a>\n        <a href=\"https://github.com/barbara-chaves\">\n          <i className=\"fab fa-github-square\"></i>\n        </a>\n      </div>\n      <a href=\"https://adalab.es/\">\n        <img src={adalabLogo} alt='Adalab' width='90px'></img></a>\n    </footer>\n  );\n};\n\nexport default footer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/app.scss\";\nimport { getPokemonsList } from \"../modules/getDataFromServer\";\nimport List from \"./List\";\nimport Details from \"./Details\";\nimport Footer from './Footer'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      pokemons: [],\n      selectedPokemon: \"\",\n      filter: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.getInicialState();\n  };\n\n  getInicialState = () => {\n    getPokemonsList().then(pokemons => this.setState({ pokemons }));\n  };\n\n  handleInputChange = event => {\n    const filter = event.target.value;\n    this.setState({ filter });\n  };\n\n  renderList = () => {\n    const filter = this.state.filter.toLowerCase();\n    const filteredPokemons = this.state.pokemons.filter(\n      pokemon =>\n        pokemon.name.includes(filter) ||\n        pokemon.types.toString().includes(filter)\n    );\n\n    return (\n      <List\n        pokemons={filteredPokemons}\n        getPokemonName={this.getPokemonName}\n        onInputChange={this.handleInputChange}\n        inputValue={this.state.filter}\n      />\n    );\n  };\n\n  renderDetails = renderProps => {\n    return <Details pokemonName={renderProps.match.params.name} pokemonList={this.state.pokemons}/>;\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" render={this.renderList} />\n          <Route path={\"/:name\"} render={this.renderDetails} />\n        </Switch>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}